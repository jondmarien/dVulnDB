// SPDX-License-Identifier: MIT
pragma solidity ^0.8.19;

/**
 * @title IVulnerabilityRegistry
 * @notice Interface for the VulnerabilityRegistry contract
 */
interface IVulnerabilityRegistry {

    enum VulnStatus {
        SUBMITTED,
        VALIDATING,
        CONFIRMED,
        REJECTED,
        DISCLOSED
    }

    function submitVulnerability(
        bytes32 _targetHash,
        uint8 _severity,
        string calldata _ipfsHash,
        string[] calldata _toolOutputs
    ) external payable;

    function validateVulnerability(
        uint256 _vulnId,
        bool _approved
    ) external;

    function getVulnerabilityDetails(uint256 _vulnId) 
        external 
        view 
        returns (
            address researcher,
            uint8 severity,
            VulnStatus status,
            uint256 submissionTime,
            uint256 disclosureTime,
            string memory ipfsHash,
            bool isDisclosed
        );

    function getTotalVulnerabilities() external view returns (uint256);

    function isValidator(address _address) external view returns (bool);
}