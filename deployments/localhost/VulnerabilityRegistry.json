{
  "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "vulnId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "researcher",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BountyPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        }
      ],
      "name": "ValidatorAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        }
      ],
      "name": "ValidatorRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "vulnId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bountyAmount",
          "type": "uint256"
        }
      ],
      "name": "VulnerabilityConfirmed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "vulnId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "VulnerabilityRejected",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "vulnId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "researcher",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "targetHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "severity",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bountyAmount",
          "type": "uint256"
        }
      ],
      "name": "VulnerabilitySubmitted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "vulnId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "VulnerabilityValidated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DISCLOSURE_DELAY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VALIDATION_THRESHOLD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_validator",
          "type": "address"
        }
      ],
      "name": "addValidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bountyEscrow",
      "outputs": [
        {
          "internalType": "contract IBountyEscrow",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_researcher",
          "type": "address"
        }
      ],
      "name": "getResearcherProfile",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "totalSubmissions",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "confirmedVulnerabilities",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalEarnings",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reputationScore",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "lastSubmission",
              "type": "uint256"
            }
          ],
          "internalType": "struct VulnerabilityRegistry.ResearcherProfile",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalVulnerabilities",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_vulnId",
          "type": "uint256"
        }
      ],
      "name": "getVulnerabilityDetails",
      "outputs": [
        {
          "internalType": "address",
          "name": "researcher",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "severity",
          "type": "uint8"
        },
        {
          "internalType": "enum IVulnerabilityRegistry.VulnStatus",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "submissionTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "disclosureTime",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "ipfsHash",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "isDisclosed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isValidator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_validator",
          "type": "address"
        }
      ],
      "name": "removeValidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "researchers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalSubmissions",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "confirmedVulnerabilities",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalEarnings",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reputationScore",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "lastSubmission",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_bountyEscrow",
          "type": "address"
        }
      ],
      "name": "setBountyEscrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_targetHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "_severity",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "_ipfsHash",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "_toolOutputs",
          "type": "string[]"
        }
      ],
      "name": "submitVulnerability",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "targetHashExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_vulnId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "validateVulnerability",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "validators",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "vulnerabilities",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "researcher",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "targetHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "severity",
          "type": "uint8"
        },
        {
          "internalType": "enum IVulnerabilityRegistry.VulnStatus",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "bountyAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "submissionTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "disclosureTime",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "ipfsHash",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "validationCount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "bountyPaid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x929af5a771b4a79d5da4c851a64ca81a211992ea9bcb0f8abb46aff040091ea0",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
    "transactionIndex": 0,
    "gasUsed": "2755214",
    "logsBloom": "0x
    "blockHash": "0xd402e39dd5ef7f1533c5651607d81d92835dc99abe559c5c39cf09064cb02230",
    "transactionHash": "0x929af5a771b4a79d5da4c851a64ca81a211992ea9bcb0f8abb46aff040091ea0",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 3,
        "transactionHash": "0x929af5a771b4a79d5da4c851a64ca81a211992ea9bcb0f8abb46aff040091ea0",
        "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xd402e39dd5ef7f1533c5651607d81d92835dc99abe559c5c39cf09064cb02230"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 3,
        "transactionHash": "0x929af5a771b4a79d5da4c851a64ca81a211992ea9bcb0f8abb46aff040091ea0",
        "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0xd402e39dd5ef7f1533c5651607d81d92835dc99abe559c5c39cf09064cb02230"
      }
    ],
    "blockNumber": 3,
    "cumulativeGasUsed": "2755214",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "88e3a7e8f78979db18895d1e89c40235",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"vulnId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"researcher\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BountyPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"ValidatorAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"ValidatorRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"vulnId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bountyAmount\",\"type\":\"uint256\"}],\"name\":\"VulnerabilityConfirmed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"vulnId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VulnerabilityRejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"vulnId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"researcher\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"targetHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"severity\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bountyAmount\",\"type\":\"uint256\"}],\"name\":\"VulnerabilitySubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"vulnId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"VulnerabilityValidated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DISCLOSURE_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALIDATION_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_validator\",\"type\":\"address\"}],\"name\":\"addValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bountyEscrow\",\"outputs\":[{\"internalType\":\"contract IBountyEscrow\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_researcher\",\"type\":\"address\"}],\"name\":\"getResearcherProfile\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"totalSubmissions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"confirmedVulnerabilities\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalEarnings\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reputationScore\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"lastSubmission\",\"type\":\"uint256\"}],\"internalType\":\"struct VulnerabilityRegistry.ResearcherProfile\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalVulnerabilities\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vulnId\",\"type\":\"uint256\"}],\"name\":\"getVulnerabilityDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"researcher\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"severity\",\"type\":\"uint8\"},{\"internalType\":\"enum IVulnerabilityRegistry.VulnStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"submissionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"disclosureTime\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isDisclosed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isValidator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_validator\",\"type\":\"address\"}],\"name\":\"removeValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"researchers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalSubmissions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"confirmedVulnerabilities\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalEarnings\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reputationScore\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"lastSubmission\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bountyEscrow\",\"type\":\"address\"}],\"name\":\"setBountyEscrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_targetHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"_severity\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_toolOutputs\",\"type\":\"string[]\"}],\"name\":\"submitVulnerability\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"targetHashExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vulnId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"validateVulnerability\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"validators\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vulnerabilities\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"researcher\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"targetHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"severity\",\"type\":\"uint8\"},{\"internalType\":\"enum IVulnerabilityRegistry.VulnStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"bountyAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"submissionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"disclosureTime\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"validationCount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"bountyPaid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Jon - ISSessions Cybersecurity Club\",\"details\":\"Implements secure vulnerability storage with IPFS integration\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"submitVulnerability(bytes32,uint8,string,string[])\":{\"params\":{\"_ipfsHash\":\"IPFS hash of encrypted vulnerability report\",\"_severity\":\"CVSS severity score (1-10)\",\"_targetHash\":\"Hashed target information\",\"_toolOutputs\":\"Array of penetration testing tool outputs\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validateVulnerability(uint256,bool)\":{\"params\":{\"_approved\":\"Whether the vulnerability is valid\",\"_vulnId\":\"Vulnerability ID to validate\"}}},\"title\":\"VulnerabilityRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addValidator(address)\":{\"notice\":\"Add validator (owner only)\"},\"getResearcherProfile(address)\":{\"notice\":\"Get researcher profile\"},\"getTotalVulnerabilities()\":{\"notice\":\"Get total vulnerabilities count\"},\"getVulnerabilityDetails(uint256)\":{\"notice\":\"Get vulnerability details (public after disclosure)\"},\"isValidator(address)\":{\"notice\":\"Check if address is validator\"},\"pause()\":{\"notice\":\"Emergency pause\"},\"removeValidator(address)\":{\"notice\":\"Remove validator (owner only)\"},\"setBountyEscrow(address)\":{\"notice\":\"Set bounty escrow contract\"},\"submitVulnerability(bytes32,uint8,string,string[])\":{\"notice\":\"Submit a new vulnerability report\"},\"unpause()\":{\"notice\":\"Unpause\"},\"validateVulnerability(uint256,bool)\":{\"notice\":\"Validate a submitted vulnerability\"}},\"notice\":\"Core contract for vulnerability submission and management\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VulnerabilityRegistry.sol\":\"VulnerabilityRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Counters.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary Counters {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\"},\"contracts/VulnerabilityRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Counters.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/Pausable.sol\\\";\\nimport \\\"./interfaces/IVulnerabilityRegistry.sol\\\";\\nimport \\\"./interfaces/IBountyEscrow.sol\\\";\\n\\n/**\\n * @title VulnerabilityRegistry\\n * @notice Core contract for vulnerability submission and management\\n * @dev Implements secure vulnerability storage with IPFS integration\\n * @author Jon - ISSessions Cybersecurity Club\\n */\\ncontract VulnerabilityRegistry is ReentrancyGuard, Ownable, Pausable, IVulnerabilityRegistry {\\n    using Counters for Counters.Counter;\\n\\n    Counters.Counter private _vulnerabilityIds;\\n\\n    // State variables\\n    IBountyEscrow public bountyEscrow;\\n    uint256 public constant VALIDATION_THRESHOLD = 3; // Minimum validator consensus\\n    uint256 public constant DISCLOSURE_DELAY = 90 days; // Responsible disclosure period\\n\\n    // Structs\\n    struct Vulnerability {\\n        uint256 id;\\n        address researcher;\\n        bytes32 targetHash; // Hashed target info for privacy\\n        uint8 severity; // CVSS score 1-10\\n        VulnStatus status;\\n        uint256 bountyAmount;\\n        uint256 submissionTime;\\n        uint256 disclosureTime;\\n        string ipfsHash; // Encrypted report on IPFS\\n        string[] toolOutputs; // Nmap, Nikto, Burp Suite results\\n        mapping(address => bool) validatorVotes;\\n        uint256 validationCount;\\n        bool bountyPaid;\\n    }\\n\\n    struct ResearcherProfile {\\n        uint256 totalSubmissions;\\n        uint256 confirmedVulnerabilities;\\n        uint256 totalEarnings;\\n        uint256 reputationScore;\\n        bool isActive;\\n        uint256 lastSubmission;\\n    }\\n\\n    // Mappings\\n    mapping(uint256 => Vulnerability) public vulnerabilities;\\n    mapping(address => ResearcherProfile) public researchers;\\n    mapping(address => bool) public validators;\\n    mapping(bytes32 => bool) public targetHashExists; // Prevent duplicates\\n\\n    // Events\\n    event VulnerabilitySubmitted(\\n        uint256 indexed vulnId,\\n        address indexed researcher,\\n        bytes32 targetHash,\\n        uint8 severity,\\n        uint256 bountyAmount\\n    );\\n\\n    event VulnerabilityValidated(\\n        uint256 indexed vulnId,\\n        address indexed validator,\\n        bool approved\\n    );\\n\\n    event VulnerabilityConfirmed(\\n        uint256 indexed vulnId,\\n        uint256 bountyAmount\\n    );\\n\\n    event VulnerabilityRejected(\\n        uint256 indexed vulnId,\\n        string reason\\n    );\\n\\n    event BountyPaid(\\n        uint256 indexed vulnId,\\n        address indexed researcher,\\n        uint256 amount\\n    );\\n\\n    event ValidatorAdded(address indexed validator);\\n    event ValidatorRemoved(address indexed validator);\\n\\n    // Modifiers\\n    modifier onlyValidator() {\\n        require(validators[msg.sender], \\\"Not authorized validator\\\");\\n        _;\\n    }\\n\\n    modifier validVulnerability(uint256 _vulnId) {\\n        require(_vulnId <= _vulnerabilityIds.current(), \\\"Invalid vulnerability ID\\\");\\n        _;\\n    }\\n\\n    constructor() {\\n        _transferOwnership(msg.sender);\\n        validators[msg.sender] = true; // Owner is default validator\\n    }\\n\\n    /**\\n     * @notice Submit a new vulnerability report\\n     * @param _targetHash Hashed target information\\n     * @param _severity CVSS severity score (1-10)\\n     * @param _ipfsHash IPFS hash of encrypted vulnerability report\\n     * @param _toolOutputs Array of penetration testing tool outputs\\n     */\\n    function submitVulnerability(\\n        bytes32 _targetHash,\\n        uint8 _severity,\\n        string calldata _ipfsHash,\\n        string[] calldata _toolOutputs\\n    ) external payable nonReentrant whenNotPaused {\\n        require(_severity >= 1 && _severity <= 10, \\\"Invalid severity score\\\");\\n        require(bytes(_ipfsHash).length > 0, \\\"IPFS hash required\\\");\\n        require(!targetHashExists[_targetHash], \\\"Duplicate vulnerability target\\\");\\n        require(msg.value > 0, \\\"Submission fee required\\\");\\n\\n        _vulnerabilityIds.increment();\\n        uint256 newVulnId = _vulnerabilityIds.current();\\n\\n        // Create vulnerability record\\n        Vulnerability storage vuln = vulnerabilities[newVulnId];\\n        vuln.id = newVulnId;\\n        vuln.researcher = msg.sender;\\n        vuln.targetHash = _targetHash;\\n        vuln.severity = _severity;\\n        vuln.status = VulnStatus.SUBMITTED;\\n        vuln.submissionTime = block.timestamp;\\n        vuln.ipfsHash = _ipfsHash;\\n        delete vuln.toolOutputs;\\n        for (uint i = 0; i < _toolOutputs.length; i++) {\\n            vuln.toolOutputs.push(_toolOutputs[i]);\\n        }\\n        vuln.bountyAmount = msg.value;\\n\\n        // Mark target as submitted\\n        targetHashExists[_targetHash] = true;\\n\\n        // Update researcher profile\\n        ResearcherProfile storage profile = researchers[msg.sender];\\n        profile.totalSubmissions++;\\n        profile.lastSubmission = block.timestamp;\\n        if (!profile.isActive) {\\n            profile.isActive = true;\\n        }\\n\\n        // Transfer bounty to escrow\\n        if (address(bountyEscrow) != address(0)) {\\n            bountyEscrow.depositBounty{value: msg.value}(newVulnId, msg.sender);\\n        }\\n\\n        emit VulnerabilitySubmitted(newVulnId, msg.sender, _targetHash, _severity, msg.value);\\n    }\\n\\n    /**\\n     * @notice Validate a submitted vulnerability\\n     * @param _vulnId Vulnerability ID to validate\\n     * @param _approved Whether the vulnerability is valid\\n     */\\n    function validateVulnerability(\\n        uint256 _vulnId,\\n        bool _approved\\n    ) external onlyValidator validVulnerability(_vulnId) nonReentrant {\\n        Vulnerability storage vuln = vulnerabilities[_vulnId];\\n        require(vuln.status == VulnStatus.SUBMITTED, \\\"Invalid status for validation\\\");\\n        require(!vuln.validatorVotes[msg.sender], \\\"Already voted\\\");\\n\\n        vuln.validatorVotes[msg.sender] = _approved;\\n\\n        if (_approved) {\\n            vuln.validationCount++;\\n        }\\n\\n        emit VulnerabilityValidated(_vulnId, msg.sender, _approved);\\n\\n        // Check if validation threshold reached\\n        if (vuln.validationCount >= VALIDATION_THRESHOLD) {\\n            _confirmVulnerability(_vulnId);\\n        }\\n    }\\n\\n    /**\\n     * @notice Internal function to confirm vulnerability and pay bounty\\n     */\\n    function _confirmVulnerability(uint256 _vulnId) internal {\\n        Vulnerability storage vuln = vulnerabilities[_vulnId];\\n        vuln.status = VulnStatus.CONFIRMED;\\n        vuln.disclosureTime = block.timestamp + DISCLOSURE_DELAY;\\n\\n        // Update researcher reputation\\n        ResearcherProfile storage profile = researchers[vuln.researcher];\\n        profile.confirmedVulnerabilities++;\\n        profile.reputationScore += _calculateReputationIncrease(vuln.severity);\\n\\n        // Trigger bounty payment through escrow\\n        if (address(bountyEscrow) != address(0) && !vuln.bountyPaid) {\\n            bountyEscrow.releaseBounty(_vulnId);\\n            vuln.bountyPaid = true;\\n            profile.totalEarnings += vuln.bountyAmount;\\n\\n            emit BountyPaid(_vulnId, vuln.researcher, vuln.bountyAmount);\\n        }\\n\\n        emit VulnerabilityConfirmed(_vulnId, vuln.bountyAmount);\\n    }\\n\\n    /**\\n     * @notice Calculate reputation score increase based on severity\\n     */\\n    function _calculateReputationIncrease(uint8 _severity) internal pure returns (uint256) {\\n        if (_severity >= 9) return 100; // Critical\\n        if (_severity >= 7) return 75;  // High\\n        if (_severity >= 4) return 50;  // Medium\\n        return 25; // Low\\n    }\\n\\n    /**\\n     * @notice Get vulnerability details (public after disclosure)\\n     */\\n    function getVulnerabilityDetails(uint256 _vulnId) \\n        external \\n        view \\n        validVulnerability(_vulnId) \\n        returns (\\n            address researcher,\\n            uint8 severity,\\n            VulnStatus status,\\n            uint256 submissionTime,\\n            uint256 disclosureTime,\\n            string memory ipfsHash,\\n            bool isDisclosed\\n        ) \\n    {\\n        Vulnerability storage vuln = vulnerabilities[_vulnId];\\n        bool canDisclose = block.timestamp >= vuln.disclosureTime || vuln.status == VulnStatus.DISCLOSED;\\n\\n        return (\\n            vuln.researcher,\\n            vuln.severity,\\n            vuln.status,\\n            vuln.submissionTime,\\n            vuln.disclosureTime,\\n            canDisclose ? vuln.ipfsHash : \\\"\\\",\\n            canDisclose\\n        );\\n    }\\n\\n    /**\\n     * @notice Get researcher profile\\n     */\\n    function getResearcherProfile(address _researcher) \\n        external \\n        view \\n        returns (ResearcherProfile memory) \\n    {\\n        return researchers[_researcher];\\n    }\\n\\n    /**\\n     * @notice Add validator (owner only)\\n     */\\n    function addValidator(address _validator) external onlyOwner {\\n        require(_validator != address(0), \\\"Invalid validator address\\\");\\n        validators[_validator] = true;\\n        emit ValidatorAdded(_validator);\\n    }\\n\\n    /**\\n     * @notice Remove validator (owner only)\\n     */\\n    function removeValidator(address _validator) external onlyOwner {\\n        validators[_validator] = false;\\n        emit ValidatorRemoved(_validator);\\n    }\\n\\n    /**\\n     * @notice Set bounty escrow contract\\n     */\\n    function setBountyEscrow(address _bountyEscrow) external onlyOwner {\\n        require(_bountyEscrow != address(0), \\\"Invalid escrow address\\\");\\n        bountyEscrow = IBountyEscrow(_bountyEscrow);\\n    }\\n\\n    /**\\n     * @notice Emergency pause\\n     */\\n    function pause() external onlyOwner {\\n        _pause();\\n    }\\n\\n    /**\\n     * @notice Unpause\\n     */\\n    function unpause() external onlyOwner {\\n        _unpause();\\n    }\\n\\n    /**\\n     * @notice Get total vulnerabilities count\\n     */\\n    function getTotalVulnerabilities() external view returns (uint256) {\\n        return _vulnerabilityIds.current();\\n    }\\n\\n    /**\\n     * @notice Check if address is validator\\n     */\\n    function isValidator(address _address) external view returns (bool) {\\n        return validators[_address];\\n    }\\n}\",\"keccak256\":\"0x677c59ed65b25f9868e55d7c75d3906fae114091269e3a9bc8373d18477c3b5c\",\"license\":\"MIT\"},\"contracts/interfaces/IBountyEscrow.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\n/**\\n * @title IBountyEscrow\\n * @notice Interface for the BountyEscrow contract\\n */\\ninterface IBountyEscrow {\\n\\n    enum EscrowStatus {\\n        DEPOSITED,\\n        RELEASED,\\n        REFUNDED,\\n        DISPUTED\\n    }\\n\\n    function depositBounty(\\n        uint256 _vulnId,\\n        address _researcher\\n    ) external payable;\\n\\n    function releaseBounty(uint256 _vulnId) external;\\n\\n    function approveBountyRelease(uint256 _vulnId) external;\\n\\n    function getEscrowDetails(uint256 _vulnId) \\n        external \\n        view \\n        returns (\\n            address researcher,\\n            uint256 amount,\\n            uint256 depositTime,\\n            EscrowStatus status,\\n            uint256 approvalCount,\\n            bool isDisputed\\n        );\\n\\n    function getTotalEscrowed() external view returns (uint256);\\n\\n    function isApprover(address _address) external view returns (bool);\\n}\",\"keccak256\":\"0x8fce61b79a31acc6d2fdd8b21ce40bb346ce32c46e2f501e432d3c86bf3b5110\",\"license\":\"MIT\"},\"contracts/interfaces/IVulnerabilityRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\n/**\\n * @title IVulnerabilityRegistry\\n * @notice Interface for the VulnerabilityRegistry contract\\n */\\ninterface IVulnerabilityRegistry {\\n\\n    enum VulnStatus {\\n        SUBMITTED,\\n        VALIDATING,\\n        CONFIRMED,\\n        REJECTED,\\n        DISCLOSED\\n    }\\n\\n    function submitVulnerability(\\n        bytes32 _targetHash,\\n        uint8 _severity,\\n        string calldata _ipfsHash,\\n        string[] calldata _toolOutputs\\n    ) external payable;\\n\\n    function validateVulnerability(\\n        uint256 _vulnId,\\n        bool _approved\\n    ) external;\\n\\n    function getVulnerabilityDetails(uint256 _vulnId) \\n        external \\n        view \\n        returns (\\n            address researcher,\\n            uint8 severity,\\n            VulnStatus status,\\n            uint256 submissionTime,\\n            uint256 disclosureTime,\\n            string memory ipfsHash,\\n            bool isDisclosed\\n        );\\n\\n    function getTotalVulnerabilities() external view returns (uint256);\\n\\n    function isValidator(address _address) external view returns (bool);\\n}\",\"keccak256\":\"0x80f96ba4ba69114d049d2a87de78e325ae5d599f750d89ac8013c05b0a1caa32\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600160008190555061003561002a6100bc60201b60201c565b6100c460201b60201c565b6000600160146101000a81548160ff02191690831515021790555061005f336100c460201b60201c565b6001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061018a565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b612faa806101996000396000f3fe6080604052600436106101345760003560e01c80637d4ddcd3116100ab578063ca102dbc1161006f578063ca102dbc146103d3578063da200770146103fc578063e9f0c4801461043f578063f2fde38b14610486578063fa52c7d8146104af578063facd743b146104ec57610134565b80637d4ddcd314610310578063813eeb1a1461033b5780638456cb59146103665780638da5cb5b1461037d578063a7f55fa3146103a857610134565b80633f4ba83a116100fd5780633f4ba83a1461024957806340a141ff146102605780634d238c8e146102895780635c975abb146102b2578063715018a6146102dd5780637157ccb8146102f457610134565b8062abb2141461013957806301bc237d14610176578063028c9b7e146101b85780630ee52e75146101e157806314552f261461021e575b600080fd5b34801561014557600080fd5b50610160600480360381019061015b9190611ce2565b610529565b60405161016d9190611dbe565b60405180910390f35b34801561018257600080fd5b5061019d60048036038101906101989190611ce2565b6105cf565b6040516101af96959493929190611df7565b60405180910390f35b3480156101c457600080fd5b506101df60048036038101906101da9190611ce2565b610618565b005b3480156101ed57600080fd5b5061020860048036038101906102039190611e8e565b6106d3565b6040516102159190611ebb565b60405180910390f35b34801561022a57600080fd5b506102336106f3565b6040516102409190611ed6565b60405180910390f35b34801561025557600080fd5b5061025e6106f8565b005b34801561026c57600080fd5b5061028760048036038101906102829190611ce2565b61070a565b005b34801561029557600080fd5b506102b060048036038101906102ab9190611ce2565b6107b0565b005b3480156102be57600080fd5b506102c76108c5565b6040516102d49190611ebb565b60405180910390f35b3480156102e957600080fd5b506102f26108dc565b005b61030e60048036038101906103099190611fe5565b6108f0565b005b34801561031c57600080fd5b50610325610dd7565b60405161033291906120eb565b60405180910390f35b34801561034757600080fd5b50610350610dfd565b60405161035d9190611ed6565b60405180910390f35b34801561037257600080fd5b5061037b610e04565b005b34801561038957600080fd5b50610392610e16565b60405161039f9190612115565b60405180910390f35b3480156103b457600080fd5b506103bd610e40565b6040516103ca9190611ed6565b60405180910390f35b3480156103df57600080fd5b506103fa60048036038101906103f59190612188565b610e51565b005b34801561040857600080fd5b50610423600480360381019061041e91906121c8565b61113d565b604051610436979695949392919061230b565b60405180910390f35b34801561044b57600080fd5b50610466600480360381019061046191906121c8565b611310565b60405161047d9b9a99989796959493929190612390565b60405180910390f35b34801561049257600080fd5b506104ad60048036038101906104a89190611ce2565b611439565b005b3480156104bb57600080fd5b506104d660048036038101906104d19190611ce2565b6114bc565b6040516104e39190611ebb565b60405180910390f35b3480156104f857600080fd5b50610513600480360381019061050e9190611ce2565b6114dc565b6040516105209190611ebb565b60405180910390f35b610531611ba0565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060c0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff161515151581526020016005820154815250509050919050565b60056020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900460ff16908060050154905086565b610620611532565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361068f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106869061248e565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60076020528060005260406000206000915054906101000a900460ff1681565b600381565b610700611532565b6107086115b0565b565b610712611532565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fe1434e25d6611e0db941968fdc97811c982ac1602e951637d206f5fdda9dd8f160405160405180910390a250565b6107b8611532565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610827576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081e906124fa565b60405180910390fd5b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fe366c1c0452ed8eec96861e9e54141ebff23c9ec89fe27b996b45f5ec388498760405160405180910390a250565b6000600160149054906101000a900460ff16905090565b6108e4611532565b6108ee6000611613565b565b6108f86116d9565b610900611728565b60018560ff16101580156109185750600a8560ff1611155b610957576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094e90612566565b60405180910390fd5b6000848490501161099d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610994906125d2565b60405180910390fd5b6007600087815260200190815260200160002060009054906101000a900460ff16156109fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f59061263e565b60405180910390fd5b60003411610a41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a38906126aa565b60405180910390fd5b610a4b6002611772565b6000610a576002611788565b90506000600460008381526020019081526020016000209050818160000181905550338160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550878160020181905550868160030160006101000a81548160ff021916908360ff16021790555060008160030160016101000a81548160ff02191690836004811115610b0a57610b09612204565b5b02179055504281600501819055508585826007019182610b2b929190612906565b50806008016000610b3c9190611bd8565b60005b84849050811015610bba5781600801858583818110610b6157610b606129d6565b5b9050602002810190610b739190612a14565b90918060018154018082558091505060019003906000526020600020016000909192909192909192909192509182610bac929190612906565b508080600101915050610b3f565b503481600401819055506001600760008a815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806000016000815480929190610c4890612aa6565b91905055504281600501819055508060040160009054906101000a900460ff16610c8a5760018160040160006101000a81548160ff0219169083151502179055505b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d7157600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a77d941e3485336040518463ffffffff1660e01b8152600401610d3e929190612aee565b6000604051808303818588803b158015610d5757600080fd5b505af1158015610d6b573d6000803e3d6000fd5b50505050505b3373ffffffffffffffffffffffffffffffffffffffff16837f9eee064548e6edd2b52dbcb71f0caa6aa57d2ea56b3a9734ad740443b0558b358b8b34604051610dbc93929190612b17565b60405180910390a3505050610dcf611796565b505050505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6276a70081565b610e0c611532565b610e146117a0565b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610e4c6002611788565b905090565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610edd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed490612b9a565b60405180910390fd5b81610ee86002611788565b811115610f2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2190612c06565b60405180910390fd5b610f326116d9565b600060046000858152602001908152602001600020905060006004811115610f5d57610f5c612204565b5b8160030160019054906101000a900460ff166004811115610f8157610f80612204565b5b14610fc1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb890612c72565b60405180910390fd5b8060090160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611050576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104790612cde565b60405180910390fd5b828160090160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555082156110ca5780600a0160008154809291906110c490612aa6565b91905055505b3373ffffffffffffffffffffffffffffffffffffffff16847f2677dff74eefc08351be82cf9958a2dfacd4678340b0659210c495275c9a203d856040516111119190611ebb565b60405180910390a3600381600a01541061112f5761112e84611802565b5b50611138611796565b505050565b600080600080600060606000876111546002611788565b811115611196576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118d90612c06565b60405180910390fd5b6000600460008b8152602001908152602001600020905060008160060154421015806111f657506004808111156111d0576111cf612204565b5b8260030160019054906101000a900460ff1660048111156111f4576111f3612204565b5b145b90508160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168260030160009054906101000a900460ff168360030160019054906101000a900460ff16846005015485600601548561126557604051806020016040528060008152506112f3565b86600701805461127490612733565b80601f01602080910402602001604051908101604052809291908181526020018280546112a090612733565b80156112ed5780601f106112c2576101008083540402835291602001916112ed565b820191906000526020600020905b8154815290600101906020018083116112d057829003601f168201915b50505050505b869950995099509950995099509950505050919395979092949650565b60046020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900460ff16908060030160019054906101000a900460ff169080600401549080600501549080600601549080600701805461139d90612733565b80601f01602080910402602001604051908101604052809291908181526020018280546113c990612733565b80156114165780601f106113eb57610100808354040283529160200191611416565b820191906000526020600020905b8154815290600101906020018083116113f957829003601f168201915b50505050509080600a01549080600b0160009054906101000a900460ff1690508b565b611441611532565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036114b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114a790612d70565b60405180910390fd5b6114b981611613565b50565b60066020528060005260406000206000915054906101000a900460ff1681565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b61153a611b07565b73ffffffffffffffffffffffffffffffffffffffff16611558610e16565b73ffffffffffffffffffffffffffffffffffffffff16146115ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a590612ddc565b60405180910390fd5b565b6115b8611b0f565b6000600160146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6115fc611b07565b6040516116099190612115565b60405180910390a1565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60026000540361171e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161171590612e48565b60405180910390fd5b6002600081905550565b6117306108c5565b15611770576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161176790612eb4565b60405180910390fd5b565b6001816000016000828254019250508190555050565b600081600001549050919050565b6001600081905550565b6117a8611728565b60018060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586117eb611b07565b6040516117f89190612115565b60405180910390a1565b600060046000838152602001908152602001600020905060028160030160016101000a81548160ff0219169083600481111561184157611840612204565b5b02179055506276a700426118559190612ed4565b81600601819055506000600560008360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160008154809291906118d990612aa6565b91905055506118f88260030160009054906101000a900460ff16611b58565b81600301600082825461190b9190612ed4565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614158015611980575081600b0160009054906101000a900460ff16155b15611ac657600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635ecb8f0c846040518263ffffffff1660e01b81526004016119e09190611ed6565b600060405180830381600087803b1580156119fa57600080fd5b505af1158015611a0e573d6000803e3d6000fd5b50505050600182600b0160006101000a81548160ff0219169083151502179055508160040154816002016000828254611a479190612ed4565b925050819055508160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16837f07e339a02227d9329089b11d9cdeea1af6caea87244864b70935aca91d7dc7fd8460040154604051611abd9190611ed6565b60405180910390a35b827f6ead00f3097961ed2c58a54d392f0b09a055c4cf533d2774e0dec90d826a95d38360040154604051611afa9190611ed6565b60405180910390a2505050565b600033905090565b611b176108c5565b611b56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b4d90612f54565b60405180910390fd5b565b600060098260ff1610611b6e5760649050611b9b565b60078260ff1610611b8257604b9050611b9b565b60048260ff1610611b965760329050611b9b565b601990505b919050565b6040518060c0016040528060008152602001600081526020016000815260200160008152602001600015158152602001600081525090565b5080546000825590600052602060002090810190611bf69190611bf9565b50565b5b80821115611c195760008181611c109190611c1d565b50600101611bfa565b5090565b508054611c2990612733565b6000825580601f10611c3b5750611c5a565b601f016020900490600052602060002090810190611c599190611c5d565b5b50565b5b80821115611c76576000816000905550600101611c5e565b5090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611caf82611c84565b9050919050565b611cbf81611ca4565b8114611cca57600080fd5b50565b600081359050611cdc81611cb6565b92915050565b600060208284031215611cf857611cf7611c7a565b5b6000611d0684828501611ccd565b91505092915050565b6000819050919050565b611d2281611d0f565b82525050565b60008115159050919050565b611d3d81611d28565b82525050565b60c082016000820151611d596000850182611d19565b506020820151611d6c6020850182611d19565b506040820151611d7f6040850182611d19565b506060820151611d926060850182611d19565b506080820151611da56080850182611d34565b5060a0820151611db860a0850182611d19565b50505050565b600060c082019050611dd36000830184611d43565b92915050565b611de281611d0f565b82525050565b611df181611d28565b82525050565b600060c082019050611e0c6000830189611dd9565b611e196020830188611dd9565b611e266040830187611dd9565b611e336060830186611dd9565b611e406080830185611de8565b611e4d60a0830184611dd9565b979650505050505050565b6000819050919050565b611e6b81611e58565b8114611e7657600080fd5b50565b600081359050611e8881611e62565b92915050565b600060208284031215611ea457611ea3611c7a565b5b6000611eb284828501611e79565b91505092915050565b6000602082019050611ed06000830184611de8565b92915050565b6000602082019050611eeb6000830184611dd9565b92915050565b600060ff82169050919050565b611f0781611ef1565b8114611f1257600080fd5b50565b600081359050611f2481611efe565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611f4f57611f4e611f2a565b5b8235905067ffffffffffffffff811115611f6c57611f6b611f2f565b5b602083019150836001820283011115611f8857611f87611f34565b5b9250929050565b60008083601f840112611fa557611fa4611f2a565b5b8235905067ffffffffffffffff811115611fc257611fc1611f2f565b5b602083019150836020820283011115611fde57611fdd611f34565b5b9250929050565b6000806000806000806080878903121561200257612001611c7a565b5b600061201089828a01611e79565b965050602061202189828a01611f15565b955050604087013567ffffffffffffffff81111561204257612041611c7f565b5b61204e89828a01611f39565b9450945050606087013567ffffffffffffffff81111561207157612070611c7f565b5b61207d89828a01611f8f565b92509250509295509295509295565b6000819050919050565b60006120b16120ac6120a784611c84565b61208c565b611c84565b9050919050565b60006120c382612096565b9050919050565b60006120d5826120b8565b9050919050565b6120e5816120ca565b82525050565b600060208201905061210060008301846120dc565b92915050565b61210f81611ca4565b82525050565b600060208201905061212a6000830184612106565b92915050565b61213981611d0f565b811461214457600080fd5b50565b60008135905061215681612130565b92915050565b61216581611d28565b811461217057600080fd5b50565b6000813590506121828161215c565b92915050565b6000806040838503121561219f5761219e611c7a565b5b60006121ad85828601612147565b92505060206121be85828601612173565b9150509250929050565b6000602082840312156121de576121dd611c7a565b5b60006121ec84828501612147565b91505092915050565b6121fe81611ef1565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6005811061224457612243612204565b5b50565b600081905061225582612233565b919050565b600061226582612247565b9050919050565b6122758161225a565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156122b557808201518184015260208101905061229a565b60008484015250505050565b6000601f19601f8301169050919050565b60006122dd8261227b565b6122e78185612286565b93506122f7818560208601612297565b612300816122c1565b840191505092915050565b600060e082019050612320600083018a612106565b61232d60208301896121f5565b61233a604083018861226c565b6123476060830187611dd9565b6123546080830186611dd9565b81810360a083015261236681856122d2565b905061237560c0830184611de8565b98975050505050505050565b61238a81611e58565b82525050565b6000610160820190506123a6600083018e611dd9565b6123b3602083018d612106565b6123c0604083018c612381565b6123cd606083018b6121f5565b6123da608083018a61226c565b6123e760a0830189611dd9565b6123f460c0830188611dd9565b61240160e0830187611dd9565b81810361010083015261241481866122d2565b9050612424610120830185611dd9565b612432610140830184611de8565b9c9b505050505050505050505050565b7f496e76616c696420657363726f77206164647265737300000000000000000000600082015250565b6000612478601683612286565b915061248382612442565b602082019050919050565b600060208201905081810360008301526124a78161246b565b9050919050565b7f496e76616c69642076616c696461746f72206164647265737300000000000000600082015250565b60006124e4601983612286565b91506124ef826124ae565b602082019050919050565b60006020820190508181036000830152612513816124d7565b9050919050565b7f496e76616c69642073657665726974792073636f726500000000000000000000600082015250565b6000612550601683612286565b915061255b8261251a565b602082019050919050565b6000602082019050818103600083015261257f81612543565b9050919050565b7f4950465320686173682072657175697265640000000000000000000000000000600082015250565b60006125bc601283612286565b91506125c782612586565b602082019050919050565b600060208201905081810360008301526125eb816125af565b9050919050565b7f4475706c69636174652076756c6e65726162696c697479207461726765740000600082015250565b6000612628601e83612286565b9150612633826125f2565b602082019050919050565b600060208201905081810360008301526126578161261b565b9050919050565b7f5375626d697373696f6e20666565207265717569726564000000000000000000600082015250565b6000612694601783612286565b915061269f8261265e565b602082019050919050565b600060208201905081810360008301526126c381612687565b9050919050565b600082905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061274b57607f821691505b60208210810361275e5761275d612704565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026127c67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612789565b6127d08683612789565b95508019841693508086168417925050509392505050565b60006128036127fe6127f984611d0f565b61208c565b611d0f565b9050919050565b6000819050919050565b61281d836127e8565b6128316128298261280a565b848454612796565b825550505050565b600090565b612846612839565b612851818484612814565b505050565b5b818110156128755761286a60008261283e565b600181019050612857565b5050565b601f8211156128ba5761288b81612764565b61289484612779565b810160208510156128a3578190505b6128b76128af85612779565b830182612856565b50505b505050565b600082821c905092915050565b60006128dd600019846008026128bf565b1980831691505092915050565b60006128f683836128cc565b9150826002028217905092915050565b61291083836126ca565b67ffffffffffffffff811115612929576129286126d5565b5b6129338254612733565b61293e828285612879565b6000601f83116001811461296d576000841561295b578287013590505b61296585826128ea565b8655506129cd565b601f19841661297b86612764565b60005b828110156129a35784890135825560018201915060208501945060208101905061297e565b868310156129c057848901356129bc601f8916826128cc565b8355505b6001600288020188555050505b50505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112612a3157612a30612a05565b5b80840192508235915067ffffffffffffffff821115612a5357612a52612a0a565b5b602083019250600182023603831315612a6f57612a6e612a0f565b5b509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612ab182611d0f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612ae357612ae2612a77565b5b600182019050919050565b6000604082019050612b036000830185611dd9565b612b106020830184612106565b9392505050565b6000606082019050612b2c6000830186612381565b612b3960208301856121f5565b612b466040830184611dd9565b949350505050565b7f4e6f7420617574686f72697a65642076616c696461746f720000000000000000600082015250565b6000612b84601883612286565b9150612b8f82612b4e565b602082019050919050565b60006020820190508181036000830152612bb381612b77565b9050919050565b7f496e76616c69642076756c6e65726162696c6974792049440000000000000000600082015250565b6000612bf0601883612286565b9150612bfb82612bba565b602082019050919050565b60006020820190508181036000830152612c1f81612be3565b9050919050565b7f496e76616c69642073746174757320666f722076616c69646174696f6e000000600082015250565b6000612c5c601d83612286565b9150612c6782612c26565b602082019050919050565b60006020820190508181036000830152612c8b81612c4f565b9050919050565b7f416c726561647920766f74656400000000000000000000000000000000000000600082015250565b6000612cc8600d83612286565b9150612cd382612c92565b602082019050919050565b60006020820190508181036000830152612cf781612cbb565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612d5a602683612286565b9150612d6582612cfe565b604082019050919050565b60006020820190508181036000830152612d8981612d4d565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612dc6602083612286565b9150612dd182612d90565b602082019050919050565b60006020820190508181036000830152612df581612db9565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612e32601f83612286565b9150612e3d82612dfc565b602082019050919050565b60006020820190508181036000830152612e6181612e25565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b6000612e9e601083612286565b9150612ea982612e68565b602082019050919050565b60006020820190508181036000830152612ecd81612e91565b9050919050565b6000612edf82611d0f565b9150612eea83611d0f565b9250828201905080821115612f0257612f01612a77565b5b92915050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b6000612f3e601483612286565b9150612f4982612f08565b602082019050919050565b60006020820190508181036000830152612f6d81612f31565b905091905056fea2646970667358221220b39e7706caf7b3e81feff4951268e6505e630b971fce5f46116563e20e51eef864736f6c634300081c0033",
  "deployedBytecode": "",
  "devdoc": {
    "author": "Jon - ISSessions Cybersecurity Club",
    "details": "Implements secure vulnerability storage with IPFS integration",
    "events": {
      "Paused(address)": {
        "details": "Emitted when the pause is triggered by `account`."
      },
      "Unpaused(address)": {
        "details": "Emitted when the pause is lifted by `account`."
      }
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "submitVulnerability(bytes32,uint8,string,string[])": {
        "params": {
          "_ipfsHash": "IPFS hash of encrypted vulnerability report",
          "_severity": "CVSS severity score (1-10)",
          "_targetHash": "Hashed target information",
          "_toolOutputs": "Array of penetration testing tool outputs"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "validateVulnerability(uint256,bool)": {
        "params": {
          "_approved": "Whether the vulnerability is valid",
          "_vulnId": "Vulnerability ID to validate"
        }
      }
    },
    "title": "VulnerabilityRegistry",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addValidator(address)": {
        "notice": "Add validator (owner only)"
      },
      "getResearcherProfile(address)": {
        "notice": "Get researcher profile"
      },
      "getTotalVulnerabilities()": {
        "notice": "Get total vulnerabilities count"
      },
      "getVulnerabilityDetails(uint256)": {
        "notice": "Get vulnerability details (public after disclosure)"
      },
      "isValidator(address)": {
        "notice": "Check if address is validator"
      },
      "pause()": {
        "notice": "Emergency pause"
      },
      "removeValidator(address)": {
        "notice": "Remove validator (owner only)"
      },
      "setBountyEscrow(address)": {
        "notice": "Set bounty escrow contract"
      },
      "submitVulnerability(bytes32,uint8,string,string[])": {
        "notice": "Submit a new vulnerability report"
      },
      "unpause()": {
        "notice": "Unpause"
      },
      "validateVulnerability(uint256,bool)": {
        "notice": "Validate a submitted vulnerability"
      }
    },
    "notice": "Core contract for vulnerability submission and management",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 259,
        "contract": "contracts/VulnerabilityRegistry.sol:VulnerabilityRegistry",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 7,
        "contract": "contracts/VulnerabilityRegistry.sol:VulnerabilityRegistry",
        "label": "_owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 158,
        "contract": "contracts/VulnerabilityRegistry.sol:VulnerabilityRegistry",
        "label": "_paused",
        "offset": 20,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 5048,
        "contract": "contracts/VulnerabilityRegistry.sol:VulnerabilityRegistry",
        "label": "_vulnerabilityIds",
        "offset": 0,
        "slot": "2",
        "type": "t_struct(Counter)1970_storage"
      },
      {
        "astId": 5051,
        "contract": "contracts/VulnerabilityRegistry.sol:VulnerabilityRegistry",
        "label": "bountyEscrow",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(IBountyEscrow)5889"
      },
      {
        "astId": 5106,
        "contract": "contracts/VulnerabilityRegistry.sol:VulnerabilityRegistry",
        "label": "vulnerabilities",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_struct(Vulnerability)5088_storage)"
      },
      {
        "astId": 5111,
        "contract": "contracts/VulnerabilityRegistry.sol:VulnerabilityRegistry",
        "label": "researchers",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_struct(ResearcherProfile)5101_storage)"
      },
      {
        "astId": 5115,
        "contract": "contracts/VulnerabilityRegistry.sol:VulnerabilityRegistry",
        "label": "validators",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 5119,
        "contract": "contracts/VulnerabilityRegistry.sol:VulnerabilityRegistry",
        "label": "targetHashExists",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_bytes32,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(IBountyEscrow)5889": {
        "encoding": "inplace",
        "label": "contract IBountyEscrow",
        "numberOfBytes": "20"
      },
      "t_enum(VulnStatus)5898": {
        "encoding": "inplace",
        "label": "enum IVulnerabilityRegistry.VulnStatus",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(ResearcherProfile)5101_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct VulnerabilityRegistry.ResearcherProfile)",
        "numberOfBytes": "32",
        "value": "t_struct(ResearcherProfile)5101_storage"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(Vulnerability)5088_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct VulnerabilityRegistry.Vulnerability)",
        "numberOfBytes": "32",
        "value": "t_struct(Vulnerability)5088_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Counter)1970_storage": {
        "encoding": "inplace",
        "label": "struct Counters.Counter",
        "members": [
          {
            "astId": 1969,
            "contract": "contracts/VulnerabilityRegistry.sol:VulnerabilityRegistry",
            "label": "_value",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(ResearcherProfile)5101_storage": {
        "encoding": "inplace",
        "label": "struct VulnerabilityRegistry.ResearcherProfile",
        "members": [
          {
            "astId": 5090,
            "contract": "contracts/VulnerabilityRegistry.sol:VulnerabilityRegistry",
            "label": "totalSubmissions",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 5092,
            "contract": "contracts/VulnerabilityRegistry.sol:VulnerabilityRegistry",
            "label": "confirmedVulnerabilities",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 5094,
            "contract": "contracts/VulnerabilityRegistry.sol:VulnerabilityRegistry",
            "label": "totalEarnings",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 5096,
            "contract": "contracts/VulnerabilityRegistry.sol:VulnerabilityRegistry",
            "label": "reputationScore",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 5098,
            "contract": "contracts/VulnerabilityRegistry.sol:VulnerabilityRegistry",
            "label": "isActive",
            "offset": 0,
            "slot": "4",
            "type": "t_bool"
          },
          {
            "astId": 5100,
            "contract": "contracts/VulnerabilityRegistry.sol:VulnerabilityRegistry",
            "label": "lastSubmission",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(Vulnerability)5088_storage": {
        "encoding": "inplace",
        "label": "struct VulnerabilityRegistry.Vulnerability",
        "members": [
          {
            "astId": 5059,
            "contract": "contracts/VulnerabilityRegistry.sol:VulnerabilityRegistry",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 5061,
            "contract": "contracts/VulnerabilityRegistry.sol:VulnerabilityRegistry",
            "label": "researcher",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 5063,
            "contract": "contracts/VulnerabilityRegistry.sol:VulnerabilityRegistry",
            "label": "targetHash",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes32"
          },
          {
            "astId": 5065,
            "contract": "contracts/VulnerabilityRegistry.sol:VulnerabilityRegistry",
            "label": "severity",
            "offset": 0,
            "slot": "3",
            "type": "t_uint8"
          },
          {
            "astId": 5068,
            "contract": "contracts/VulnerabilityRegistry.sol:VulnerabilityRegistry",
            "label": "status",
            "offset": 1,
            "slot": "3",
            "type": "t_enum(VulnStatus)5898"
          },
          {
            "astId": 5070,
            "contract": "contracts/VulnerabilityRegistry.sol:VulnerabilityRegistry",
            "label": "bountyAmount",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 5072,
            "contract": "contracts/VulnerabilityRegistry.sol:VulnerabilityRegistry",
            "label": "submissionTime",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 5074,
            "contract": "contracts/VulnerabilityRegistry.sol:VulnerabilityRegistry",
            "label": "disclosureTime",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 5076,
            "contract": "contracts/VulnerabilityRegistry.sol:VulnerabilityRegistry",
            "label": "ipfsHash",
            "offset": 0,
            "slot": "7",
            "type": "t_string_storage"
          },
          {
            "astId": 5079,
            "contract": "contracts/VulnerabilityRegistry.sol:VulnerabilityRegistry",
            "label": "toolOutputs",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_string_storage)dyn_storage"
          },
          {
            "astId": 5083,
            "contract": "contracts/VulnerabilityRegistry.sol:VulnerabilityRegistry",
            "label": "validatorVotes",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 5085,
            "contract": "contracts/VulnerabilityRegistry.sol:VulnerabilityRegistry",
            "label": "validationCount",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 5087,
            "contract": "contracts/VulnerabilityRegistry.sol:VulnerabilityRegistry",
            "label": "bountyPaid",
            "offset": 0,
            "slot": "11",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "384"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}